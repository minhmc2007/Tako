name: Build and Release Tako

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: linux
            output: tako
            cc: gcc
          - os: windows-latest
            target: windows
            output: tako.exe
            cc: gcc
          - os: macos-latest
            target: macos
            output: tako
            cc: gcc

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup GCC (Windows)
      if: matrix.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        install: mingw-w64-x86_64-gcc

    - name: Build (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        ${{ matrix.cc }} tako.c -o ${{ matrix.output }}
        
    - name: Build (Windows)
      if: matrix.os == 'windows-latest'
      shell: msys2 {0}
      run: |
        gcc tako.c -o ${{ matrix.output }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: tako-${{ matrix.target }}
        path: ${{ matrix.output }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Tako Release ${{ github.ref_name }}
        draft: false
        prerelease: true

    - name: Upload Linux Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tako-linux/tako
        asset_name: tako-linux
        asset_content_type: application/octet-stream

    - name: Upload Windows Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tako-windows/tako.exe
        asset_name: tako-windows.exe
        asset_content_type: application/octet-stream

    - name: Upload macOS Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tako-macos/tako
        asset_name: tako-macos
        asset_content_type: application/octet-stream
